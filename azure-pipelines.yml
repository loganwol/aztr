# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  major: 1
  minor: 1

name: $(major).$(minor)$(Rev:.r)


steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: "Build Release"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: 'Release'

- task: VSBuild@1
  displayName: "Build Debug"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: 'Debug'

- task: VSTest@2
  displayName: "Run Unit tests on Release build"
  inputs:
    platform: '$(buildPlatform)'
    configuration: 'Release'
    testSelector: testAssemblies
    testAssemblyVer2: |
      **\*test.unit*.dll
      !**\*TestAdapter.dll
      !**\obj\** 
    codeCoverageEnabled: true
    runSettingsFile: AzTestReporter\CodeCoverage.runsettings

- task: PowerShell@2
  displayName: "Generate Test run report"
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Generating report"      
      .\AzTestReporter\publish\Bin\Debug\AnyCPU\AzTestReporter.App\net472\AzTestReporter.App.exe --trt Unit --sendmail false -f ALL -o $(System.DefaultWorkingDirectory)\Report

      tree /a /f
    errorActionPreference: 'continue'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  condition: always()

- task: PublishBuildArtifacts@1
  displayName: "Publish AzTestReporter"
  inputs:
    PathtoPublish: '.\AzTestReporter\publish\Bin\Release\AnyCPU\AzTestReporter.App\net472'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: always()

- task: PublishBuildArtifacts@1
  displayName: "Publish nuget package"
  inputs:
    PathtoPublish: '.\AzTestReporter\publish\Bin\Release\AnyCPU\AzTestReporter.App\aztestreporter.$(Build.BuildNumber).nupkg'
    ArtifactName: 'nugetpkg'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  displayName: "Publish Test run report"
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)\Report'
    ArtifactName: 'report'
    publishLocation: 'Container'
  condition: always()